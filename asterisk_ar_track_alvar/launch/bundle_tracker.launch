<launch>
    
    <arg name="marker_size"             default="5.0" />    <!-- in centimeter -->
    <arg name="max_new_marker_error"    default="0.05" />
    <arg name="max_track_error"         default="0.2" />
    <arg name="median_filter_size"      default="10" />
    
    <arg name="camera_name"             default="camera" />
    <arg name="camera_type"             default="rgb" doc="rgb or rgbd"/>
    <arg name="image_topic"             default="$(arg camera_name)/image_raw" />
    <arg name="cloud_topic"             default="$(arg camera_name)/depth_registered/points" />
    <arg name="camera_info_topic"       default="$(arg camera_name)/camera_info" />
    <arg name="output_frame"            default="$(arg camera_name)_marker_bundle_frame" />
    <arg name="node_name"               default="$(arg camera_name)_ar_track_alvar_bundle_tracker" />
    
    <arg name="bundle_file_directory"   default="$(find asterisk_ar_track_alvar)/config/bundle" />
    <arg name="bundle_file_names"       default="single_01.xml single_02.xml single_03.xml single_04.xml single_05.xml single_06.xml" />
    <arg name="bundle_file_list"        default="$(eval arg('bundle_file_directory') + '/' + (' ' + arg('bundle_file_directory') + '/').join(arg('bundle_file_names').strip().split(' ')))" />
    
    
    <node if="$(eval arg('camera_type') != 'rgbd')"
        name="$(arg node_name)" pkg="ar_track_alvar" type="findMarkerBundlesNoKinect" respawn="false" output="screen"
        args="$(arg marker_size) $(arg max_new_marker_error) $(arg max_track_error) $(arg image_topic) $(arg camera_info_topic) $(arg output_frame) $(arg bundle_file_list)"
    />
    <node if="$(eval arg('camera_type') == 'rgbd')"
        name="$(arg node_name)" pkg="ar_track_alvar" type="findMarkerBundles" respawn="false" output="screen"
        args="$(arg marker_size) $(arg max_new_marker_error) $(arg max_track_error) $(arg cloud_topic) $(arg camera_info_topic) $(arg output_frame) $(arg median_filter_size) $(arg bundle_file_list)"
    />
    
</launch>
